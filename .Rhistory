library(broom)
library(stargazer)
## match arguments
effect <- match.arg(effect)
model <- match.arg(model)
inst.method <- match.arg(inst.method)
random.method <- match.arg(random.method)
## Run the Model
unadjusted <- plm(depvar ~ currentlegalstatus + age +
operating_expense_._assets +
donations_assets_ratio +
capital_.asset_ratio +
asset_structure + lassets + kkm +
education + profit_margin + year,
data = data, effect = effect,
model = model,
inst.method = inst.method, index = index,
digits = digits)
## Output results
list(broom::glance(unadjusted),
## Correct standard errors for heteroscedasticity
## And cross-sectional dependence
coeftest(unadjusted, vcov. = function(x) {
vcovBK(x, method = "arellano", type="HC1", cluster = "group")
}))
}
modelling(data = data, depvar = data$average_loan_balance_per_borrower, model = "random")
modelling(data = data, depvar = data$gross_loan_portfolio_to_total_assets, model = "random")
source('C:/Users/John Karuitha/OneDrive - University of Witwatersrand/Documents/My Thesis/Karuitha and Ojah Data/THESIS/Dissertation/Objective 1 Binary/Chapters in Progress/FinancialSocialEff/new-dea_analysis.R')
install.packages("partykit")
head(data)
# plotting scatter diagrams
plotter_scatter <- function(data, x, y,
z = c("currentlegalstatus", "age"),
xlab, ylab, title) {
# match arguments
z <- match.arg(z)
# Load libraries
library(tidyverse)
library(gghalves)
library(ggeasy)
library(ggthemes)
# write the function
data %>% ggplot(aes(x = {{x}}, y = {{y}}, z = {{z}})) +
geom_point(shape = 1, size = 4) + geom_smooth(method = "lm") +
labs(x = {{xlab}}, y = {{ylab}}, title = {{title}})
}
# plotting scatter diagrams
plotter_scatter <- function(data, x, y, z,
xlab, ylab, title) {
# Load libraries
library(tidyverse)
library(gghalves)
library(ggeasy)
library(ggthemes)
# write the function
data %>% ggplot(aes(x = {{x}}, y = {{y}}, z = {{z}})) +
geom_point(shape = 1, size = 4) + geom_smooth(method = "lm") +
labs(x = {{xlab}}, y = {{ylab}}, title = {{title}})
}
# Data visualization
plotter_scatter(data = data, x = percent_of_female_borrowers,
y = `operating_expense_/_assets`,
z = currentlegalstatus,
xlab = "Percent of Female Borrowers",
ylab = "Operating Expense to Assets",
title = "Female Borrowers and Operating Expenses")
# plotting scatter diagrams
plotter_scatter <- function(data, x, y, z,
xlab, ylab, title) {
# Load libraries
library(tidyverse)
library(gghalves)
library(ggeasy)
library(ggthemes)
# write the function
data %>% ggplot(aes(x = {{x}}, y = {{y}}, z = {{z}})) +
geom_point(shape = 1, size = 4) + geom_smooth(method = "lm") +
labs(x = xlab, y = ylab, title = title)
}
# Data visualization
plotter_scatter(data = data, x = percent_of_female_borrowers,
y = `operating_expense_/_assets`,
z = currentlegalstatus,
xlab = "Percent of Female Borrowers",
ylab = "Operating Expense to Assets",
title = "Female Borrowers and Operating Expenses")
# plotting scatter diagrams
plotter_scatter <- function(data, x, y, z,
xlab, ylab, title) {
# Load libraries
library(tidyverse)
library(gghalves)
library(ggeasy)
library(ggthemes)
# write the function
data %>% ggplot(aes(x = {{x}}, y = {{y}}, col = {{z}})) +
geom_point(shape = 1, size = 4) + geom_smooth(method = "lm") +
labs(x = xlab, y = ylab, title = title)
}
# Data visualization
plotter_scatter(data = data, x = percent_of_female_borrowers,
y = `operating_expense_/_assets`,
col = currentlegalstatus,
xlab = "Percent of Female Borrowers",
ylab = "Operating Expense to Assets",
title = "Female Borrowers and Operating Expenses")
# plotting scatter diagrams
plotter_scatter <- function(data, x, y, z,
xlab, ylab, title) {
# Load libraries
library(tidyverse)
library(gghalves)
library(ggeasy)
library(ggthemes)
# write the function
data %>% ggplot(aes(x = {{x}}, y = {{y}}, fill = {{z}})) +
geom_point(shape = 1, size = 4) + geom_smooth(method = "lm") +
labs(x = xlab, y = ylab, title = title)
}
# plotting scatter diagrams
plotter_scatter <- function(data, x, y, z,
xlab, ylab, title) {
# Load libraries
library(tidyverse)
library(gghalves)
library(ggeasy)
library(ggthemes)
# write the function
data %>% ggplot(aes(x = {{x}}, y = {{y}}, col = {{z}})) +
geom_point(shape = 1, size = 4) + geom_smooth(method = "lm") +
labs(x = xlab, y = ylab, title = title)
}
# Data visualization
plotter_scatter(data = data, x = percent_of_female_borrowers,
y = `operating_expense_/_assets`,
col = currentlegalstatus,
xlab = "Percent of Female Borrowers",
ylab = "Operating Expense to Assets",
title = "Female Borrowers and Operating Expenses")
# Data visualization
plotter_scatter(data = data, x = percent_of_female_borrowers,
y = `operating_expense_/_assets`,
z = currentlegalstatus,
xlab = "Percent of Female Borrowers",
ylab = "Operating Expense to Assets",
title = "Female Borrowers and Operating Expenses")
# plotting scatter diagrams
plotter_scatter <- function(data, x, y, z,
xlab, ylab, title) {
# Load libraries
library(tidyverse)
library(gghalves)
library(ggeasy)
library(ggthemes)
# write the function
data %>% ggplot(aes(x = {{x}}, y = {{y}}, col = {{z}})) +
geom_point(shape = 1, size = 4) +
labs(x = xlab, y = ylab, title = title)
}
# Data visualization
plotter_scatter(data = data, x = percent_of_female_borrowers,
y = `operating_expense_/_assets`,
z = currentlegalstatus,
xlab = "Percent of Female Borrowers",
ylab = "Operating Expense to Assets",
title = "Female Borrowers and Operating Expenses")
# plotting scatter diagrams
plotter_scatter <- function(data, x, y, z,
xlab, ylab, title) {
# Load libraries
library(tidyverse)
library(gghalves)
library(ggeasy)
library(ggthemes)
# write the function
data %>% ggplot(aes(x = {{x}}, y = {{y}}, col = {{z}})) +
geom_point(shape = 1, size = 2) +
labs(x = xlab, y = ylab, title = title)
}
# plotting scatter diagrams
plotter_scatter <- function(data, x, y, z,
xlab, ylab, title) {
# Load libraries
library(tidyverse)
library(gghalves)
library(ggeasy)
library(ggthemes)
# write the function
data %>% ggplot(aes(x = {{x}}, y = {{y}}, col = {{z}})) +
geom_point(shape = 1, size = 2) +
labs(x = xlab, y = ylab, title = title)
}
# Data visualization
plotter_scatter(data = data, x = percent_of_female_borrowers,
y = `operating_expense_/_assets`,
z = currentlegalstatus,
xlab = "Percent of Female Borrowers",
ylab = "Operating Expense to Assets",
title = "Female Borrowers and Operating Expenses")
# Female borrowers vs Donations
plotter_scatter(data = data, x = percent_of_female_borrowers,
y = donations_assets_ratio,
z = currentlegalstatus,
xlab = "Percent of Female Borrowers",
ylab = "Donations to Assets Ratio",
title = "Female Borrowers and Donations of MFIs in Africa")
# Data visualization
data %>% select(currentlegalstatus, age,
operating_expense_._assets,
donations_assets_ratio,
capital_.asset_ratio,
asset_structure, lassets, kkm,
education, profit_margin) %>% ggpairs()
# Data visualization
data %>% select(currentlegalstatus, age,
`operating_expense_/_assets`,
donations_assets_ratio,
capital_.asset_ratio,
asset_structure, lassets, kkm,
education, profit_margin) %>% ggpairs()
# Data visualization
data %>% select(currentlegalstatus, age,
`operating_expense_/_assets`,
donations_assets_ratio,
`capital_/asset_ratio`,
asset_structure, lassets, kkm,
education, profit_margin) %>% ggpairs()
# Data visualization
data %>% select(currentlegalstatus, age,
`operating_expense_/_assets`,
donations_assets_ratio,
`capital_/asset_ratio`,
asset_structure, lassets,
education, profit_margin) %>% ggpairs()
### Important functions ----
## Regression function - fixed, random and pooling
modelling <- function(data, depvar,
effect = c("individual", "twoways", "time", "nested"),
model = c("within", "random", "ht", "between", "pooling", "fd"),
inst.method = c("bvk", "baltagi", "am", "bms"),
random.method = c("swar", "amemiya", "walhus", "nerlove"),
digits = 4, index = c("mfiid", "year")){
## Load libraries
library(plm)
library(broom)
library(pcse)
library(car)
library(zoo)
library(lmtest)
library(broom)
library(stargazer)
## match arguments
effect <- match.arg(effect)
model <- match.arg(model)
inst.method <- match.arg(inst.method)
random.method <- match.arg(random.method)
## Run the Model
unadjusted <- plm(depvar ~ currentlegalstatus + age +
operating_expense_._assets +
donations_assets_ratio +
capital_.asset_ratio +
asset_structure + lassets +
education + profit_margin + year,
data = data, effect = effect,
model = model,
inst.method = inst.method, index = index,
digits = digits)
## Output results
list(broom::glance(unadjusted),
## Correct standard errors for heteroscedasticity
## And cross-sectional dependence
coeftest(unadjusted, vcov. = function(x) {
vcovBK(x, method = "arellano", type="HC1", cluster = "group")
}))
}
modelling(data = data, depvar = data$percent_of_female_borrowers)
modelling(data = data, depvar = data$percent_of_female_borrowers, model = "random")
### Important functions ----
## Regression function - fixed, random and pooling
modelling <- function(data, depvar,
effect = c("individual", "twoways", "time", "nested"),
model = c("within", "random", "ht", "between", "pooling", "fd"),
inst.method = c("bvk", "baltagi", "am", "bms"),
random.method = c("swar", "amemiya", "walhus", "nerlove"),
digits = 4, index = c("mfiid", "year")){
## Load libraries
library(plm)
library(broom)
library(pcse)
library(car)
library(zoo)
library(lmtest)
library(broom)
library(stargazer)
## match arguments
effect <- match.arg(effect)
model <- match.arg(model)
inst.method <- match.arg(inst.method)
random.method <- match.arg(random.method)
## Run the Model
unadjusted <- plm(depvar ~ currentlegalstatus + age +
operating_expense_._assets +
education + profit_margin + year,
data = data, effect = effect,
model = model,
inst.method = inst.method, index = index,
digits = digits)
## Output results
list(broom::glance(unadjusted),
## Correct standard errors for heteroscedasticity
## And cross-sectional dependence
coeftest(unadjusted, vcov. = function(x) {
vcovBK(x, method = "arellano", type="HC1", cluster = "group")
}))
}
modelling(data = data, depvar = data$percent_of_female_borrowers, model = "random")
## Hausmann Test function
hausmann_test <- function(data, depvar){
library(plm)
library(broom)
library(pcse)
library(car)
library(zoo)
library(lmtest)
library(broom)
fixed <- plm(depvar ~ currentlegalstatus + age +
operating_expense_._assets +
donations_assets_ratio +
capital_.asset_ratio +
asset_structure + lassets + kkm +
education + profit_margin + year,
data = data, effect = "individual", model = "within",
index = c("mfiid", "year"))
random <- plm(depvar ~ currentlegalstatus +
operating_expense_._assets +
donations_assets_ratio +
capital_.asset_ratio +
asset_structure + lassets + kkm +
education + profit_margin + year,
data = data, effect = "individual", model = "random",
index = c("mfiid", "year"))
broom::tidy(phtest(fixed, random))
}
modelling(data = data, depvar = data$percent_of_female_borrowers, model = "random")
### Important functions ----
## Regression function - fixed, random and pooling
modelling <- function(data, depvar,
effect = c("individual", "twoways", "time", "nested"),
model = c("within", "random", "ht", "between", "pooling", "fd"),
inst.method = c("bvk", "baltagi", "am", "bms"),
random.method = c("swar", "amemiya", "walhus", "nerlove"),
digits = 4, index = c("mfiid", "year")){
## Load libraries
library(plm)
library(broom)
library(pcse)
library(car)
library(zoo)
library(lmtest)
library(broom)
library(stargazer)
## match arguments
effect <- match.arg(effect)
model <- match.arg(model)
inst.method <- match.arg(inst.method)
random.method <- match.arg(random.method)
## Run the Model
unadjusted <- plm(depvar ~ currentlegalstatus +
operating_expense_._assets +
education + profit_margin + year,
data = data, effect = effect,
model = model,
inst.method = inst.method, index = index,
digits = digits)
## Output results
list(broom::glance(unadjusted),
## Correct standard errors for heteroscedasticity
## And cross-sectional dependence
coeftest(unadjusted, vcov. = function(x) {
vcovBK(x, method = "arellano", type="HC1", cluster = "group")
}))
}
modelling(data = data, depvar = data$percent_of_female_borrowers, model = "random")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(dtplyr)
library(plm)
library(ggthemes)
library(GGally)
library(skimr)
library(prettydoc)
## Read in the dataset
data <- read_csv("amelia.csv")
data$currentlegalstatus <- factor(data$currentlegalstatus,
levels = c("NGO", "Bank", "NBFI",
"Credit Union/ Cooperative",
"Rural Bank"))
head(data)
### Important functions ----
## Regression function - fixed, random and pooling
modelling <- function(data, depvar,
effect = c("individual", "twoways", "time", "nested"),
model = c("within", "random", "ht", "between", "pooling", "fd"),
inst.method = c("bvk", "baltagi", "am", "bms"),
random.method = c("swar", "amemiya", "walhus", "nerlove"),
digits = 4, index = c("mfiid", "year")){
## Load libraries
library(plm)
library(broom)
library(pcse)
library(car)
library(zoo)
library(lmtest)
library(broom)
library(stargazer)
## match arguments
effect <- match.arg(effect)
model <- match.arg(model)
inst.method <- match.arg(inst.method)
random.method <- match.arg(random.method)
## Run the Model
unadjusted <- plm(depvar ~ currentlegalstatus + age +
+           operating_expense_._assets +
+           donations_assets_ratio +
+           capital_.asset_ratio +
+           asset_structure + lassets +
+           education + profit_margin + year,
data = data, effect = effect,
model = model,
inst.method = inst.method, index = index,
digits = digits)
## Output results
list(broom::glance(unadjusted),
## Correct standard errors for heteroscedasticity
## And cross-sectional dependence
coeftest(unadjusted, vcov. = function(x) {
vcovBK(x, method = "arellano", type="HC1", cluster = "group")
}))
}
## Hausmann Test function
hausmann_test <- function(data, depvar){
library(plm)
library(broom)
library(pcse)
library(car)
library(zoo)
library(lmtest)
library(broom)
fixed <- plm(depvar ~ currentlegalstatus + age +
+           operating_expense_._assets +
+           donations_assets_ratio +
+           capital_.asset_ratio +
+           asset_structure + lassets +
+           education + profit_margin + year,
data = data, effect = "individual", model = "within",
index = c("mfiid", "year"))
random <- plm(depvar ~ currentlegalstatus + age +
+           operating_expense_._assets +
+           donations_assets_ratio +
+           capital_.asset_ratio +
+           asset_structure + lassets +
+           education + profit_margin + year,
data = data, effect = "individual", model = "random",
index = c("mfiid", "year"))
broom::tidy(phtest(fixed, random))
}
# Median function
median_n <- function(x){median(x, na.rm = TRUE)}
# plotiing function
plotter <- function(data, x , y, z, xlabel, ylabel, title){
library(tidyverse)
library(ggthemes)
library(gghalves)
ggplot(data = data, mapping = aes(x = reorder({{x}}, {{y}}, median_n),
y = {{y}}, fill = {{z}})) +
geom_half_violin(draw_quantiles = c(0.25, 0.5, 0.75),
scale = "count") +
scale_y_log10() + labs(y = ylabel, x = xlabel,
title = title,
caption =
paste0("Source: Authors' construction from the MIX data\n",
"*The red point is the mean. Horizontal lines show the ",
"first, second, and third quartiles\n",
"*The size of the violins is proportional ",
"to the data points")) +
tidyquant::theme_tq() +
theme(legend.position = "none") +
stat_summary(fun = mean, geom = "point",
size = 1, color = "red")}
# plotting scatter diagrams
plotter_scatter <- function(data, x, y, z,
xlab, ylab, title) {
# Load libraries
library(tidyverse)
library(gghalves)
library(ggeasy)
library(ggthemes)
# write the function
data %>% ggplot(aes(x = {{x}}, y = {{y}}, col = {{z}})) +
geom_point(shape = 1, size = 2) +
labs(x = xlab, y = ylab, title = title)
}
# Data visualization
data %>% select(currentlegalstatus, age,
`operating_expense_/_assets`,
donations_assets_ratio,
`capital_/asset_ratio`,
asset_structure, lassets,
education, profit_margin) %>% ggpairs()
modelling(data = data, depvar = data$percent_of_female_borrowers, model = "random")
modelling(data = data, depvar = data$percent_of_female_borrowers, model = "random") %>% stargazer()
